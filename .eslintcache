[{"/Users/zigagroselj/Desktop/The Odin Project/twitter-clone/src/index.js":"1","/Users/zigagroselj/Desktop/The Odin Project/twitter-clone/src/App.js":"2","/Users/zigagroselj/Desktop/The Odin Project/twitter-clone/src/components/Sidebar.js":"3","/Users/zigagroselj/Desktop/The Odin Project/twitter-clone/src/components/SidebarItem.js":"4","/Users/zigagroselj/Desktop/The Odin Project/twitter-clone/src/components/ProfileIcon.js":"5","/Users/zigagroselj/Desktop/The Odin Project/twitter-clone/src/components/MainFeed.js":"6","/Users/zigagroselj/Desktop/The Odin Project/twitter-clone/src/components/NewTweet.js":"7","/Users/zigagroselj/Desktop/The Odin Project/twitter-clone/src/components/TweetFeed.js":"8","/Users/zigagroselj/Desktop/The Odin Project/twitter-clone/src/components/Profile.js":"9","/Users/zigagroselj/Desktop/The Odin Project/twitter-clone/src/firebase/firebaseIndex.js":"10","/Users/zigagroselj/Desktop/The Odin Project/twitter-clone/src/components/Twitter.js":"11","/Users/zigagroselj/Desktop/The Odin Project/twitter-clone/src/components/Signin.js":"12","/Users/zigagroselj/Desktop/The Odin Project/twitter-clone/src/provider/UserProvider.js":"13","/Users/zigagroselj/Desktop/The Odin Project/twitter-clone/src/components/Comments.js":"14","/Users/zigagroselj/Desktop/The Odin Project/twitter-clone/src/components/itemComment.js":"15"},{"size":220,"mtime":1607444834606,"results":"16","hashOfConfig":"17"},{"size":831,"mtime":1608226337746,"results":"18","hashOfConfig":"17"},{"size":1728,"mtime":1607536046418,"results":"19","hashOfConfig":"17"},{"size":408,"mtime":1607180538952,"results":"20","hashOfConfig":"17"},{"size":901,"mtime":1607609103275,"results":"21","hashOfConfig":"17"},{"size":1848,"mtime":1608220615254,"results":"22","hashOfConfig":"17"},{"size":4310,"mtime":1608219587065,"results":"23","hashOfConfig":"17"},{"size":5194,"mtime":1608226861639,"results":"24","hashOfConfig":"17"},{"size":1321,"mtime":1608226385482,"results":"25","hashOfConfig":"17"},{"size":1212,"mtime":1607962043700,"results":"26","hashOfConfig":"17"},{"size":1311,"mtime":1608226379609,"results":"27","hashOfConfig":"17"},{"size":845,"mtime":1608224871977,"results":"28","hashOfConfig":"17"},{"size":877,"mtime":1607609067616,"results":"29","hashOfConfig":"17"},{"size":2531,"mtime":1608223040738,"results":"30","hashOfConfig":"17"},{"size":381,"mtime":1608222940759,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"jvacek",{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"34"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/zigagroselj/Desktop/The Odin Project/twitter-clone/src/index.js",[],["69","70"],"/Users/zigagroselj/Desktop/The Odin Project/twitter-clone/src/App.js",["71","72"],"import './App.css';\nimport React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  HashRouter,\n} from 'react-router-dom';\nimport Signin from './components/Signin';\nimport Twitter from './components/Twitter';\nimport { makeStyles } from '@material-ui/core/styles';\nimport UserProvider from './provider/UserProvider';\n\nconst useStyles = makeStyles((theme) => ({\n  appContainer: {\n    height: '100vh',\n  },\n}));\n\nfunction App() {\n  return (\n    <UserProvider basename=\"/\">\n      <HashRouter>\n        <div className=\"App\">\n          <Switch>\n            <Route exact path=\"/\">\n              <Signin />\n            </Route>\n            <Route exact path=\"/twitter\">\n              <Twitter />\n            </Route>\n          </Switch>\n        </div>\n      </HashRouter>\n    </UserProvider>\n  );\n}\n\nexport default App;\n","/Users/zigagroselj/Desktop/The Odin Project/twitter-clone/src/components/Sidebar.js",[],"/Users/zigagroselj/Desktop/The Odin Project/twitter-clone/src/components/SidebarItem.js",[],"/Users/zigagroselj/Desktop/The Odin Project/twitter-clone/src/components/ProfileIcon.js",["73"],"import React, { useContext } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport { UserContext } from '../provider/UserProvider';\n\nconst ProfileIcon = () => {\n  const user = useContext(UserContext);\n  const { displayName, email, photoURL, handle } = user;\n  return (\n    <div className=\"sidebar-profile\">\n      <div className=\"sideber-name_profile\">\n        <Avatar alt={displayName} src={photoURL} />\n        <div style={{ marginLeft: '5px' }}>\n          <Typography fontWeight=\"fontWeightBold\">\n            <b>{displayName}</b>\n          </Typography>\n          <Typography>@{handle}</Typography>\n        </div>\n      </div>\n      <div>\n        <MoreHorizIcon style={{ marginRight: '15px' }}></MoreHorizIcon>\n      </div>\n    </div>\n  );\n};\n\nexport default ProfileIcon;\n","/Users/zigagroselj/Desktop/The Odin Project/twitter-clone/src/components/MainFeed.js",[],"/Users/zigagroselj/Desktop/The Odin Project/twitter-clone/src/components/NewTweet.js",[],"/Users/zigagroselj/Desktop/The Odin Project/twitter-clone/src/components/TweetFeed.js",["74","75"],"import React, { useState, useEffect, useContext } from 'react';\nimport Comments from './Comments';\nimport IconButton from '@material-ui/core/IconButton';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport CommentIcon from '@material-ui/icons/Comment';\nimport ShareIcon from '@material-ui/icons/Share';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport { UserContext } from '../provider/UserProvider';\nimport { db } from '../firebase/firebaseIndex';\n\nconst TweetFeed = ({\n  id,\n  tweet,\n  displayName,\n  handle,\n  likes,\n  photo,\n  tweetText,\n  likedBy,\n  image,\n  allComments,\n}) => {\n  const user = useContext(UserContext);\n  const [liked, setLiked] = useState(false);\n  const [whoLiked, setWhoLiked] = useState(likedBy);\n  const [firstMount, setFirstMount] = useState(true);\n  const [commentsVisible, setCommentsVisible] = useState(false);\n\n  const likeTweet = () => {\n    if (liked === false && whoLiked.includes(displayName) === false) {\n      setLiked(true);\n      setWhoLiked(whoLiked.concat(displayName));\n    }\n  };\n  useEffect(() => {\n    if (whoLiked.includes(displayName) === true) setLiked(true);\n  }, [whoLiked]);\n\n  useEffect(() => {\n    if (whoLiked.includes(displayName) === true && firstMount === false) {\n      updateWhoLiked();\n    }\n    setFirstMount(false);\n  }, [whoLiked]);\n\n  const updateWhoLiked = () => {\n    let ref = db.collection('allTweets').doc(id);\n    return ref\n      .update({\n        likedBy: whoLiked,\n      })\n      .then(function () {\n        console.log('Document successfully updated!');\n      })\n      .catch(function (error) {\n        // The document probably doesn't exist.\n        console.error('Error updating document: ', error);\n      });\n  };\n\n  const retweet = (\n    id,\n    user,\n    displayName,\n    tweetText,\n    handle,\n    tweet,\n    photo,\n    image\n  ) => {\n    db.collection('allTweets')\n      .doc(`${id}${user.displayName}retweet`)\n      .set({\n        id: `${id}${user.displayName}retweet`,\n        retweetPerson: user.displayName,\n        retweetPhoto: user.photoURL,\n        retweetHandle: user.handle,\n        displayName: displayName,\n        handle: handle,\n        photoLink: photo,\n        tweet: tweetText,\n        likes: 0,\n        timestamp: Date.now(),\n        likedBy: [],\n        imageURL: image,\n        comments: [],\n      })\n      .then(() => {\n        console.log('Successfully saved tweet info');\n      })\n      .catch((error) => {\n        console.log('Error saving tweet info', error);\n      });\n  };\n\n  const seeComments = () => {\n    setCommentsVisible(!commentsVisible);\n  };\n\n  return (\n    <div className=\"tweet\">\n      {tweet.retweetPerson && (\n        <div className=\"retweet\">\n          <Typography style={{ marginLeft: '15px' }} fontStyle=\"italic\">\n            Retweeted by:\n          </Typography>\n\n          <Avatar\n            style={{ marginLeft: '10px' }}\n            alt={tweet.retweetPerson}\n            src={tweet.retweetPhoto}\n          />\n          <Typography\n            style={{ marginLeft: '15px' }}\n            fontWeight=\"fontWeightBold\"\n          >\n            <b>{tweet.retweetPerson}</b> @{tweet.retweetHandle}\n          </Typography>\n        </div>\n      )}\n      <div className=\"tweetText\">\n        <Avatar style={{ marginLeft: '10px' }} alt={displayName} src={photo} />\n        <div style={{ marginLeft: '5px' }}>\n          <Typography fontWeight=\"fontWeightBold\">\n            <b>{displayName}</b> @{handle}\n          </Typography>\n          <Typography style={{ marginBottom: '15px' }}>{tweetText}</Typography>\n          {image && (\n            <img\n              className=\"tweetImage\"\n              src={image}\n              alt={image}\n              style={{ height: '200px' }}\n            ></img>\n          )}\n        </div>\n      </div>\n      <div className=\"tweetOptionsBottom\">\n        <IconButton\n          onClick={seeComments}\n          className=\"tweetIcon\"\n          style={{ color: 'white' }}\n        >\n          <CommentIcon />\n        </IconButton>\n        <IconButton\n          onClick={() => {\n            retweet(\n              id,\n              user,\n              displayName,\n              tweetText,\n              handle,\n              tweet,\n              photo,\n              image\n            );\n          }}\n          aria-label=\"share\"\n          className=\"tweetIcon\"\n          style={{ marginLeft: '30px', color: 'white' }}\n        >\n          <ShareIcon />\n        </IconButton>\n        <IconButton\n          aria-label=\"favorite\"\n          className=\"tweetIcon\"\n          style={{ marginLeft: '30px', color: 'white' }}\n          onClick={likeTweet}\n        ></IconButton>\n        <IconButton\n          aria-label=\"favorite\"\n          className=\"tweetIcon\"\n          style={\n            liked\n              ? { marginLeft: '30px', color: 'red' }\n              : { marginLeft: '30px', color: 'white' }\n          }\n          onClick={likeTweet}\n        >\n          <FavoriteBorderIcon />\n          {whoLiked.length}\n        </IconButton>\n      </div>\n      {commentsVisible && <Comments id={id} allComments={allComments} />}\n    </div>\n  );\n};\n\nexport default TweetFeed;\n","/Users/zigagroselj/Desktop/The Odin Project/twitter-clone/src/components/Profile.js",["76"],"import React, { useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport { useHistory } from 'react-router-dom';\nimport { logOut } from '../firebase/firebaseIndex';\nimport { UserContext } from '../provider/UserProvider';\n\nconst useStyles = makeStyles((theme) => ({\n  large: {\n    width: theme.spacing(10),\n    height: theme.spacing(10),\n  },\n}));\n\nconst Profile = () => {\n  const classes = useStyles();\n  const user = useContext(UserContext);\n  const history = useHistory();\n  const { displayName, email, photoURL, handle } = user;\n  const signOut = () => {\n    history.push('/');\n    logOut();\n  };\n\n  return (\n    <div>\n      <div className=\"profile-container\">\n        <Typography variant=\"h5\" style={{ marginBottom: '10px' }}>\n          Logged in as:\n        </Typography>\n        <Avatar className={classes.large} alt={displayName} src={photoURL} />\n        <Typography variant=\"h6\" style={{ marginTop: '10px' }}>\n          {displayName}\n        </Typography>\n        <Typography variant=\"subtitle1\" style={{ marginTop: '5px' }}>\n          @{handle}\n        </Typography>\n        <button onClick={signOut}>sign out </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;\n","/Users/zigagroselj/Desktop/The Odin Project/twitter-clone/src/firebase/firebaseIndex.js",[],"/Users/zigagroselj/Desktop/The Odin Project/twitter-clone/src/components/Twitter.js",[],"/Users/zigagroselj/Desktop/The Odin Project/twitter-clone/src/components/Signin.js",[],"/Users/zigagroselj/Desktop/The Odin Project/twitter-clone/src/provider/UserProvider.js",["77"],"import React, { useState, useEffect, createContext } from 'react';\nimport { auth } from '../firebase/firebaseIndex';\n\nexport const UserContext = createContext({ user: null });\n\nconst getHandle = (userObjName) => {\n  let n = userObjName.split(' ');\n  let lWord = n[n.length - 1];\n  return lWord;\n};\n\nexport default (props) => {\n  const [userInfo, setUserInfo] = useState(null);\n\n  useEffect(() => {\n    auth.onAuthStateChanged(async (user) => {\n      if (user) {\n        const { displayName, email, photoURL } = user;\n\n        setUserInfo({\n          displayName: displayName,\n          email: email,\n          photoURL: photoURL,\n          handle: getHandle(displayName),\n        });\n      } else if (!user) {\n        setUserInfo(null);\n      }\n    });\n  }, []);\n  return (\n    <UserContext.Provider value={userInfo}>\n      {props.children}\n    </UserContext.Provider>\n  );\n};\n","/Users/zigagroselj/Desktop/The Odin Project/twitter-clone/src/components/Comments.js",["78"],"import React, { useContext, useState, useEffect } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\nimport { UserContext } from '../provider/UserProvider';\nimport { db } from '../firebase/firebaseIndex';\nimport ItemComment from './itemComment';\n\nconst useStyles = makeStyles((theme) => ({\n  large: {\n    width: theme.spacing(6),\n    height: theme.spacing(6),\n  },\n  textArea: {\n    width: '100%',\n    background: 'none',\n    border: 'none',\n    color: 'white',\n    fontFamily: 'Roboto',\n    fontSize: 20,\n  },\n}));\n\nconst Comments = ({ id, allComments }) => {\n  const [comment, setComment] = useState('');\n  const [allCommentsData, setAllComments] = useState(allComments);\n  const classes = useStyles();\n  const user = useContext(UserContext);\n  const userAvatar = user.photoURL;\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setAllComments([...allComments, { comment: comment, avatar: userAvatar }]);\n    setComment('');\n  };\n\n  useEffect(() => {\n    saveCommentToDB(id, allCommentsData);\n  }, [allCommentsData]);\n\n  const saveCommentToDB = (id, allComments) => {\n    let ref = db.collection('allTweets').doc(id);\n\n    return ref\n      .update({\n        comments: allCommentsData,\n      })\n      .then(function () {\n        console.log('Document successfully updated!');\n      })\n      .catch(function (error) {\n        // The document probably doesn't exist.\n        console.error('Error updating document: ', error);\n      });\n  };\n\n  return (\n    <div>\n      {allCommentsData.map((item) => {\n        return <ItemComment item={item} />;\n      })}\n      <form\n        onSubmit={(e) => {\n          handleSubmit(e);\n        }}\n      >\n        <div className=\"newTweetForm\">\n          <Avatar\n            className={classes.large}\n            src={user.photoURL}\n            alt={user.displayName}\n            style={{ marginLeft: '10px' }}\n          />\n\n          <TextareaAutosize\n            rowsMax={10}\n            aria-label=\"maximum height\"\n            placeholder=\"Insert your comment?\"\n            className={classes.textArea}\n            inputprops={{ maxLength: 10 }}\n            value={comment}\n            onChange={(e) => {\n              setComment(e.target.value);\n            }}\n          />\n          <button type=\"submit\" className=\"tweet-buttonMain\">\n            Comment\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default Comments;\n","/Users/zigagroselj/Desktop/The Odin Project/twitter-clone/src/components/itemComment.js",[],{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":4,"column":20,"nodeType":"85","messageId":"86","endLine":4,"endColumn":26},{"ruleId":"83","severity":1,"message":"87","line":14,"column":7,"nodeType":"85","messageId":"86","endLine":14,"endColumn":16},{"ruleId":"83","severity":1,"message":"88","line":9,"column":24,"nodeType":"85","messageId":"86","endLine":9,"endColumn":29},{"ruleId":"89","severity":1,"message":"90","line":38,"column":6,"nodeType":"91","endLine":38,"endColumn":16,"suggestions":"92"},{"ruleId":"89","severity":1,"message":"93","line":45,"column":6,"nodeType":"91","endLine":45,"endColumn":16,"suggestions":"94"},{"ruleId":"83","severity":1,"message":"88","line":20,"column":24,"nodeType":"85","messageId":"86","endLine":20,"endColumn":29},{"ruleId":"95","severity":1,"message":"96","line":12,"column":1,"nodeType":"97","endLine":36,"endColumn":3},{"ruleId":"89","severity":1,"message":"98","line":39,"column":6,"nodeType":"91","endLine":39,"endColumn":23,"suggestions":"99"},"no-native-reassign",["100"],"no-negated-in-lhs",["101"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'useStyles' is assigned a value but never used.","'email' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'displayName'. Either include it or remove the dependency array.","ArrayExpression",["102"],"React Hook useEffect has missing dependencies: 'displayName', 'firstMount', and 'updateWhoLiked'. Either include them or remove the dependency array.",["103"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","React Hook useEffect has missing dependencies: 'id' and 'saveCommentToDB'. Either include them or remove the dependency array.",["104"],"no-global-assign","no-unsafe-negation",{"desc":"105","fix":"106"},{"desc":"107","fix":"108"},{"desc":"109","fix":"110"},"Update the dependencies array to be: [displayName, whoLiked]",{"range":"111","text":"112"},"Update the dependencies array to be: [displayName, firstMount, updateWhoLiked, whoLiked]",{"range":"113","text":"114"},"Update the dependencies array to be: [allCommentsData, id, saveCommentToDB]",{"range":"115","text":"116"},[1197,1207],"[displayName, whoLiked]",[1367,1377],"[displayName, firstMount, updateWhoLiked, whoLiked]",[1143,1160],"[allCommentsData, id, saveCommentToDB]"]